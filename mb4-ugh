#!/usr/bin/python

from Xlib.display import Display
from Xlib import X
from Xlib.ext import record
from Xlib.protocol import rq
from pykeyboard import PyKeyboard
from os import system

def handler(reply):
    data = reply.data

    while len(data):
        event, data = rq.EventField(None).parse_binary_value(data, disp.display, None, None)

        # print "'%s', '%s'" % (event.detail, event.type) # debug

        if event.detail == 56:
            if event.type == 4:
                keyboard.press_key(keyboard.scroll_lock_key)
            elif event.type == 5:
                keyboard.release_key(keyboard.scroll_lock_key)

# Get current display
disp = Display()
root = disp.screen().root

# Initialize PyKeyboard
keyboard = PyKeyboard()

# Disable MB4 using xinput
system("xinput set-button-map $(xinput | grep 'A4TECH USB Device' | awk '{print $6}' | cut -b4-) 1 2 3 4 5 6 7 56 57 10 11 12 13 14 15 16 17 18 19 20")

# Monitor keypress and button press
ctx = disp.record_create_context(
            0,
            [record.AllClients],
            [{
                    'core_requests': (0, 0),
                    'core_replies': (0, 0),
                    'ext_requests': (0, 0, 0, 0),
                    'ext_replies': (0, 0, 0, 0),
                    'delivered_events': (0, 0),
                    'device_events': (X.KeyReleaseMask, X.ButtonReleaseMask),
                    'errors': (0, 0),
                    'client_started': False,
                    'client_died': False,
            }])
disp.record_enable_context(ctx, handler)
disp.record_free_context(ctx)

while 1:
    event = root.display.next_event()
